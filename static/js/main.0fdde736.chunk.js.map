{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","defaultProps","Section","props","title","children","FeedbackOptions","options","onLeaveFeedback","className","style","item","map","el","type","name","onClick","list","App","state","handleCount","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","parseInt","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAGA,SAASA,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACGD,EAAQ,EACP,+BACE,6BACE,uCACQ,+BAAOH,SAGjB,6BACE,0CACW,+BAAOC,SAGpB,6BACE,sCACO,+BAAOC,SAGhB,wCACS,+BAAOC,OAEhB,oDACqB,iCAAOC,EAAP,cAIvB,qDAMRL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAUPL,QClCAO,MAff,SAAiBC,GACf,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,qCACE,6BAAKD,IACJC,M,gBCLQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACI,oBAAIC,UAAWC,IAAMC,KAArB,SACGJ,EAAQK,KAAI,SAAAC,GAAE,OACb,6BACE,wBAAQC,KAAK,SAASC,KAAMF,EAAIG,QAASR,EAAkBC,UAAWC,IAAMO,KAA5E,SACGJ,KAFIA,Q,ICFbK,E,4MACJC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,YAAc,SAAAC,GACZ,IAAMN,EAAOM,EAAEC,cAAcP,KAC7B,EAAKQ,UAAS,SAAAC,GAAS,sBACpBT,EAAOS,EAAUT,GAAQ,O,EAI9BU,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB4B,gCAAkC,WAChC,IAAQ9B,EAAS,EAAKuB,MAAdvB,KACR,OAAO+B,SAAU/B,EAAO,EAAK6B,qBAAwB,M,4CAGvD,WACE,MAA+BG,KAAKT,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBoB,KAAKR,gBAG1B,cAAC,EAAD,CAAShB,MAAM,aAAf,SACE,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKH,qBACZzB,mBAAoB4B,KAAKF,6C,GAxCnBG,aAgDHX,IC/CfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,iC","file":"static/js/main.0fdde736.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      {total > 0 ? (\r\n        <ul>\r\n          <li>\r\n            <p>\r\n              Good: <span>{good}</span>\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Neutral: <span>{neutral}</span>\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Bad: <span>{bad}</span>\r\n            </p>\r\n          </li>\r\n          <p>\r\n            Total: <span>{total}</span>\r\n          </p>\r\n          <p>\r\n            Positive Feedback: <span>{positivePercentage} %</span>\r\n          </p>\r\n        </ul>\r\n      ) : (\r\n        <p>Here is nothing...</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section(props) {\r\n  const { title, children } = props;\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n      <ul className={style.item}>\r\n        {options.map(el => (\r\n          <li key={el}>\r\n            <button type=\"button\" name={el} onClick={onLeaveFeedback}  className={style.list}>\r\n              {el}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n  );\r\n}","import React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleCount = e => {\n    const name = e.currentTarget.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return parseInt((good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleCount}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__1rA2k\"};"],"sourceRoot":""}